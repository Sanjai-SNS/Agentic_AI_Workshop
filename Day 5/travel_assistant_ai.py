# -*- coding: utf-8 -*-
"""Travel_Assistant_AI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L1IpQ6j8LxdEZKw3As1_oEx0lAFn96ZD
"""

!pip install -q duckduckgo-search google-generativeai requests

import requests
import getpass
from duckduckgo_search import DDGS
import google.generativeai as genai

gemini_api_key = getpass.getpass("Enter your Gemini API key: ")
weather_api_key = getpass.getpass("Enter your WeatherAPI key: ")

def get_weather_forecast(city: str) -> str:
    url = f"http://api.weatherapi.com/v1/current.json?key={weather_api_key}&q={city}&aqi=no"
    response = requests.get(url)
    data = response.json()
    if "current" in data:
        return (f"The current temperature in {city} is {data['current']['temp_c']}°C, "
                f"condition: {data['current']['condition']['text']}.")
    else:
        return "Weather data not found for this location."

def get_top_attractions(city: str) -> str:
    with DDGS() as ddgs:
        results = ddgs.text(f"top tourist attractions in {city}", max_results=5)
        places = [r["title"] for r in results]
    return f"Top attractions in {city}:\n" + "\n".join(f"- {p}" for p in places)

destination = input("Enter a city or travel destination: ")
weather_info = get_weather_forecast(destination)
attractions_info = get_top_attractions(destination)
combined_info = f"{weather_info}\n\n{attractions_info}"
print("🔍 Travel info gathered:\n")
print(combined_info)